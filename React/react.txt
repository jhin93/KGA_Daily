12/13
리액트 강의 시작.

ole(object linking embeded)

- 리액트 설치
npx install create-react-app my-react-app
앱 실행 : npm start

- yarn 설치
npm install -g yarn
더 나은 캐싱시스템을 사용하기 위함이다.
앱 실행 : yarn start

- npm run build
npm run build 실행하면 build라는 폴더가 생김
사이트를 배포할 때 꼭 필요한 파일들만 모아서 빌드를 한다.
실제 서비스할때는 build 안에있는 파일들을 사용하면 된다.


12/14
- npm install -s serve
serve는 production build를 한 이후에 앱을 실행하기 위해서 설치를 한 것입니다.
https://edu.goorm.io/qna/9571

- npx serve -s build
빌드 후 작아진 용량을 확인하기 위해 웹 서버를 설치한 후 배포.
serve 패키지를 이용해서 build 폴더 내 파일들을 배포. -s 옵션은 build 디렉터리를 다큐먼트 루트로 하는 옵션이다.

- npm install react-scripts@latest
create-react-app을 할때 설치되는 react-scripts를 최신으로 만들어주는 명령어인듯 한다.
https://velog.io/@rlaqltmxm/create-react-app-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0

여러 컴포넌트들을 만들게 되는데 이는 div id="root" 안에 들어가게 되어있다.

App.js 가 메인화면을 구성한 것이다.
App.js -> index.js -> index.html

리액트는 메모리에 virtual DOM을 생성한다.
App.js를 고치는 것만 실시간으로 반영된다.

// 메소드
React.createElement
3개의 파라미터를 받는다.
ex)
const ops = {className: "h1Test", onClick : () => {}}
element = React.createElement("h1", ops, "Hello React!!!");
ReactDOM.render(element, document.getElementById("react-app"));

ReactDOM.render
2개의 파라미터를 받는다.
ex)
ReactDOM.render(element, document.getElementById("react-app"));

React.Component
컴포넌트를 사용하기 위해 쓰는 메소드인듯 하다.
React 컴포넌트 class를 정의하려면 React.Component를 상속받아야 합니다.
https://ko.reactjs.org/docs/react-component.html

React.StrictMode
디버깅으로 문제점을 찾아주는 메소드. build 했을때는 알아서 빠짐.

인자를 준 컴포넌트 사용하기
// Car.js
function Car(props) {
    return <h1>This is my {props.color} car!!!</h1>
}

//index.js
ReactDOM.render(
  <React.StrictMode>
    {/* <App /> */}
    <Car color="red"/>
  </React.StrictMode>,
  document.getElementById('root')
);

// return 안에서 줄바꿈을 위해 빈태그를 사용한다.
function Garage(){
    return (
        <>
            <h1>My Garage in the which car!!!</h1>
            <Car />
        </>
    );
}

함수형 컴포넌트 vs 클래스형 컴포넌트
https://devowen.com/298

리액트는 아래 4가지를 순서대로 실행한다. 
render만을 필수로 하고 나머지는 선택.

  1. constructor
  2. getDeriveStateFromProps() - 부모로부터 상속되었다.
  3. render
  4. componentDidMount()


Mount : 마운트(Mount)는 DOM 객체가 생성되고 브라우저에 나타나는 것을 의미합니다.
Unmount : 컴포넌트가 DOM에서 제거되는 것을 언마운트(UnMount)라고 합니다. 호출되는 함수는 하나로 componentWillUnmount 함수입니다. 해당 컴포넌트가 제거되기 직전에 호출됩니다
https://lktprogrammer.tistory.com/130

리액트에서 이벤트를 쓰는 방법
- 카멜 케이스, 중괄호.
ex) onClick={shoot}

화살표함수
https://coding-hwije.tistory.com/30

useState  
useState는 무엇을 반환할까요?  
state 변수, 해당 변수를 갱신할 수 있는 함수 이 두 가지 쌍을 반환합니다.  
이것이 바로 const [count, setCount] = useState()라고 쓰는 이유입니다.  
클래스 컴포넌트의 this.state.count와 this.setState와 유사합니다. 
https://ko.reactjs.org/docs/hooks-state.html   

onChange 
변화가 일어났는지 감지.
https://kkamikoon.tistory.com/entry/Javascript-onchange-%EC%9D%B4%EB%B2%A4%ED%8A%B8%EB%A1%9C-%EB%82%B4%EC%9A%A9-%EB%B3%80%EA%B2%BD-%EA%B0%90%EC%A7%80?category=822471


Function component에서의 prev state
https://satisfactoryplace.tistory.com/258  

라우터 설치
npm install --save react-router-dom

Outlet 사용예시
https://medium.com/age-of-awareness/amazing-new-stuff-in-react-router-v6-895ba3fab6af


React Hooks: useEffect 사용법  
https://www.daleseo.com/react-hooks-use-effect/  
https://xiubindev.tistory.com/100?category=826117  


React Hooks: useRef 사용법  
https://www.daleseo.com/react-hooks-use-ref/  
https://xiubindev.tistory.com/98?category=826117  
https://react.vlpt.us/basic/10-useRef.html  


객체 비구조화 할당  
https://learnjs.vlpt.us/basics/06-object.html#%EA%B0%9D%EC%B2%B4-%EB%B9%84%EA%B5%AC%EC%A1%B0%ED%99%94-%ED%95%A0%EB%8B%B9  


* 리액트는 부모 컴포넌트가 리렌더링되면 자식 컴포넌트도 리렌더링된다.

$ yarn add classname
classname이라는 모듈을 설치.